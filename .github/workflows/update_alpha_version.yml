name: Update Alpha Version

on:
  pull_request:
    branches:
      - develop
    types:
      - closed

jobs:
  update_version_and_tag:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: develop
          fetch-depth: 0

      - name: Update Version and Create Tag
        run: |
          git config user.name "GitHub Actions"
          git config user.email "noreply@github.com"

          LAST_COMMIT_MESSAGE=$(git log -1 --pretty=%B)

          if [[ $LAST_COMMIT_MESSAGE == *"feature"* ]] || [[ $LAST_COMMIT_MESSAGE == *"crowdin"* ]] || [[ $LAST_COMMIT_MESSAGE == *"bugfix"* ]]; then

            CURRENT_TAG=$(git describe --tags --abbrev=0 --match '*-alpha')

            MAJOR=$(echo $CURRENT_TAG | cut -d. -f1)
            MINOR=$(echo $CURRENT_TAG | cut -d. -f2)
            PATCH=$(echo $CURRENT_TAG | cut -d. -f3 | sed 's/-alpha//')

            if [[ $LAST_COMMIT_MESSAGE == *"feature"* ]]; then
              MINOR=$((MINOR+1))
              PATCH=0
            elif [[ $LAST_COMMIT_MESSAGE == *"crowdin"* ]] || [[ $LAST_COMMIT_MESSAGE == *"bugfix"* ]]; then
              PATCH=$((PATCH+1))
            fi

            NEW_TAG="${MAJOR}.${MINOR}.${PATCH}-alpha"

            echo "New version: $NEW_TAG"

            git tag -a "$NEW_TAG" -m "Version: $NEW_TAG"
            git push origin --tags
          fi
      - name: Create Package
        uses: BigWigsMods/packager@v2
        env:
          CF_API_KEY: ${{ secrets.CF_API_KEY }}
          GITHUB_OAUTH: ${{ secrets.GITHUB_TOKEN }}
